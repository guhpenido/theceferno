import firebase from 'firebase/app';
import { Data, OnceOptions, Options, InitialValueOptions } from './types';
export declare const useDocument: <T = firebase.firestore.DocumentData>(docRef?: firebase.firestore.DocumentReference<firebase.firestore.DocumentData> | null | undefined, options?: Options | undefined) => [firebase.firestore.DocumentSnapshot<T> | undefined, boolean, firebase.FirebaseError | undefined];
export declare const useDocumentOnce: <T = firebase.firestore.DocumentData>(docRef?: firebase.firestore.DocumentReference<firebase.firestore.DocumentData> | null | undefined, options?: OnceOptions | undefined) => [firebase.firestore.DocumentSnapshot<T> | undefined, boolean, firebase.FirebaseError | undefined];
export declare const useDocumentData: <T = firebase.firestore.DocumentData, IDField extends string = "", RefField extends string = "">(docRef?: firebase.firestore.DocumentReference<firebase.firestore.DocumentData> | null | undefined, options?: (Options & {
    idField?: string | undefined;
    refField?: string | undefined;
    snapshotOptions?: firebase.firestore.SnapshotOptions | undefined;
    transform?: ((val: any) => T) | undefined;
} & InitialValueOptions<T>) | undefined) => [Data<T, IDField, RefField> | undefined, boolean, firebase.FirebaseError | undefined];
export declare const useDocumentDataOnce: <T = firebase.firestore.DocumentData, IDField extends string = "", RefField extends string = "">(docRef?: firebase.firestore.DocumentReference<firebase.firestore.DocumentData> | null | undefined, options?: (OnceOptions & {
    idField?: string | undefined;
    refField?: string | undefined;
    snapshotOptions?: firebase.firestore.SnapshotOptions | undefined;
    transform?: ((val: any) => T) | undefined;
} & InitialValueOptions<T>) | undefined) => [Data<T, IDField, RefField> | undefined, boolean, firebase.FirebaseError | undefined];
